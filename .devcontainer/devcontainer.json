{
    "build": {
        "args": {
            "http_proxy": "${localEnv:http_proxy}",
            "https_proxy": "${localEnv:https_proxy}",
            "no_proxy": "${localEnv:no_proxy}"
        },
        "dockerfile": "./Dockerfile",
        "context": "."
    },

    "containerEnv": {
        "http_proxy": "${localEnv:http_proxy}",
        "https_proxy": "${localEnv:https_proxy}",
        "no_proxy": "${localEnv:no_proxy}"
    },

    "features": {
        "ghcr.io/devcontainers/features/common-utils:2": {}
    },

    "customizations": {
        "vscode": {
            "settings": {
                "[latex]": {
                    "editor.formatOnSave": true
                },
                "files.associations": {
                    ".latexmkrc": "perl"
                },
                "latex-workshop.chktex.enabled": true,
                "latex-workshop.formatting.latex": "latexindent",
                "latex-workshop.latex.recipe.default": "latexmk (latexmkrc)",
                "latex-workshop.view.pdf.viewer": "tab"
            },
            "extensions": [
                "editorconfig.editorconfig",
                "james-yu.latex-workshop"
            ]
        }
    },

    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [5000, 5001],

    // [Optional] To reuse of your local HTTPS dev cert:
    //
    // 1. Export it locally using this command:
    //    * Windows PowerShell:
    //        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
    //    * macOS/Linux terminal:
    //        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
    //
    // 2. Uncomment these 'remoteEnv' lines:
    //    "remoteEnv": {
    // 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
    //        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
    //    },
    //
    // 3. Do one of the following depending on your scenario:
    //    * When using GitHub Codespaces and/or Remote - Containers:
    //      1. Start the container
    //      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
    //      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
    //
    //    * If only using Remote - Containers with a local container, uncomment this line instead:
    //      "mounts": [ "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind" ],

    "onCreateCommand": "sudo chown -R vscode:vscode /usr/local/texlive",

    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": [
        "tlmgr",
        "install",
        "academicons",
        "arydshln",
        "babel-french",
        "fontawesome5",
        "fontaxes",
        "fontspec",
        "hyphen-french",
        "latexindent",
        "latexmk",
        "lualatex-math",
        "luatexbase",
        "moderncv",
        "multirow",
        "opensans",
        "pgf",
        "unicode-math",
        "xkeyval"
    ],

    // Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "vscode"
}
